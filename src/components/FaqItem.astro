---
import { Markdown } from 'astro-remote';

interface Props {
  data: {
    question: string;
    answer: string;
  };
}

const { data } = Astro.props;
---

{
  data.answer && (
    <details
      itemscope
      itemprop="mainEntity"
      itemtype="https://schema.org/Question"
      class="faq-details [&_summary:after]:open:-rotate-180"
    >
      <summary
        class="py-2 outline-none cursor-pointer focus:underline text-xl font-500 relative items-center flex justify-between list-none
      after:(block duration-200 content-empty bg-[url(/arrow-bottom.svg)] bg-contain bg-center bg-no-repeat h-3 w-4 min-w-4 my-auto ml-4 opacity-60)"
      >
        <h2
          itemprop="name"
          class="font-headbold"
          set:html={data.question}
        />
      </summary>
      <div
        itemscope
        itemprop="acceptedAnswer"
        itemtype="https://schema.org/Answer"
      >
        <div
          itemprop="text"
          class="px-0 pb-4"
        >
          <Markdown content={data.answer} />
        </div>
      </div>
    </details>
  )
}

<style is:global>
  .faq-details {
    &[open] h2 {
      color: var(--clr-primary-450);
    }

    ul,
    ol {
      @apply pl-5;

      & + p {
        @apply mt-2;
      }
    }

    ul {
      @apply list-disc;
    }

    ol {
      @apply list-decimal;
    }

    h2 {
      color: var(--clr-primary-700);

      &:hover {
        color: var(--clr-primary-450);
      }
    }

    h3 {
      @apply mt-2;
    }

    td,
    th {
      @apply border-b text-left py-2 pr-4;
    }

    a {
      @apply underline decoration-light-blue-400 underline-offset-2;
    }
  }
</style>
