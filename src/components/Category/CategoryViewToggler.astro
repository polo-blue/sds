---
import { Icon } from 'astro-icon/components';

interface Props {
  showText: string; // "Show:"
  listText: string; // "List"
  gridText: string; // "Grid"
  listAriaLabel: string; // "List view"
  gridAriaLabel: string; // "Grid view"
  class?: string;
}

const {
  showText,
  listText,
  gridText,
  listAriaLabel,
  gridAriaLabel,
  class: className,
} = Astro.props;
---

<div class:list={[className]}>
  <span class="text-slate-default text-sm">{showText}</span>
  <div class="flex border rounded">
    <button
      data-view="list"
      data-view-toggle
      class="view-toggle flex items-center gap-1 px-3 py-0.5 transition-colors"
      aria-label={listAriaLabel}
    >
      <Icon
        name="ant-design:bars-outlined"
        class="w-4 h-4"
      />
      <span class="text-sm">{listText}</span>
    </button>
    <button
      data-view="grid"
      data-view-toggle
      class="view-toggle flex items-center gap-1 px-3 py-0.5 transition-colors"
      aria-label={gridAriaLabel}
    >
      <Icon
        name="ant-design:appstore-outlined"
        class="w-4 h-4"
      />
      <span class="text-sm">{gridText}</span>
    </button>
  </div>
</div>

<script>
  function initializeView() {
    const savedView = localStorage.getItem('categoryView') || 'list';
    updateUI(savedView);

    // Clean up existing listeners to prevent duplicates
    document.querySelectorAll('[data-view-toggle]').forEach(btn => {
      btn.removeEventListener('click', handleViewToggle);
      btn.addEventListener('click', handleViewToggle);
    });
  }

  function handleViewToggle(e: Event) {
    const button = e.currentTarget as HTMLElement;
    if (!button?.dataset.view) return;

    const view = button.dataset.view;
    localStorage.setItem('categoryView', view);
    updateUI(view);

    // Push to dataLayer directly
    if (window.dataLayer) {
      window.dataLayer.push({
        event: 'view_style_change',
        viewType: view,
        category: window.location.pathname,
      });
    }
  }

  function updateUI(view: string) {
    document.querySelectorAll('.view-toggle').forEach(btn => {
      btn.classList.toggle('bg-neutral-lightest', btn.dataset.view === view);
    });

    const productsContainer = document.querySelector('.products-container');
    if (productsContainer) {
      productsContainer.classList.remove('view-grid', 'view-list');
      productsContainer.classList.add(`view-${view}`);
    }
  }

  document.addEventListener('astro:page-load', initializeView);
</script>
