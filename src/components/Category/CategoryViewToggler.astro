---
import { Icon } from 'astro-icon/components';

interface Props {
  showText: string;      // "Show:"
  listText: string;      // "List"
  gridText: string;      // "Grid"
  listAriaLabel: string; // "List view"
  gridAriaLabel: string; // "Grid view"
  class?: string; 
}

const { 
  showText, 
  listText, 
  gridText, 
  listAriaLabel, 
  gridAriaLabel, 
  class: className
} = Astro.props;
---

<div class:list={[ className ]}>
  <span class="text-slate-default text-sm">{showText}</span>
  <div class="flex border rounded">
    <button 
      data-view="list"
      class="view-toggle flex items-center gap-1 px-3 py-1.5 transition-colors"
      aria-label={listAriaLabel}
    >
      <Icon name="ant-design:bars-outlined" class="w-4 h-4" />
      <span class="text-sm">{listText}</span>
    </button>
    <button 
      data-view="grid"
      class="view-toggle flex items-center gap-1 px-3 py-1.5 transition-colors"
      aria-label={gridAriaLabel}
    >
      <Icon name="ant-design:appstore-outlined" class="w-4 h-4" />
      <span class="text-sm">{gridText}</span>
    </button>
  </div>
</div>

<script>
  function initializeView() {
    const savedView = localStorage.getItem('categoryView') || 'list';
    updateUI(savedView);
    
    // Clean up existing listeners to prevent duplicates
    document.querySelectorAll('.view-toggle').forEach(btn => {
      btn.removeEventListener('click', handleViewToggle);
      btn.addEventListener('click', handleViewToggle);
    });
  }

  function handleViewToggle(e) {
    if (!(e.currentTarget instanceof HTMLElement)) return;
    const view = e.currentTarget.dataset.view;
    if (!view) return;

    localStorage.setItem('categoryView', view);
    updateUI(view);
  }

  function updateUI(view) {
    // Update toggle buttons
    document.querySelectorAll('.view-toggle').forEach(btn => {
      btn.classList.toggle('bg-neutral-lightest', btn.dataset.view === view);
    });

    // Update products container
    const productsContainer = document.querySelector('.products-container');
    if (productsContainer) {
      productsContainer.classList.remove('view-grid', 'view-list');
      productsContainer.classList.add(`view-${view}`);
    }
  }

  // Initialize on page load and view transitions
  document.addEventListener('astro:page-load', initializeView);
</script>