---
import { Icon } from 'astro-icon/components';

interface Props {
  showText: string;      // "Show:"
  listText: string;      // "List"
  gridText: string;      // "Grid"
  listAriaLabel: string; // "List view"
  gridAriaLabel: string; // "Grid view"
  showViewToggler: boolean;
  class?: string; 
}

const { 
  showText, 
  listText, 
  gridText, 
  listAriaLabel, 
  gridAriaLabel, 
  showViewToggler,
  class: className
} = Astro.props;
---

{
  showViewToggler && 
<div class:list={[ className ]}>
  <span class="text-slate-default text-sm">{showText}</span>
  <div class="flex border rounded">
    <button 
      data-view="list"
      class="view-toggle flex items-center gap-1 px-3 py-1.5 transition-colors"
      aria-label={listAriaLabel}
    >
      <Icon name="ant-design:bars-outlined" class="w-4 h-4" />
      <span class="text-sm">{listText}</span>
    </button>
    <button 
      data-view="grid"
      class="view-toggle flex items-center gap-1 px-3 py-1.5 transition-colors"
      aria-label={gridAriaLabel}
    >
      <Icon name="ant-design:appstore-outlined" class="w-4 h-4" />
      <span class="text-sm">{gridText}</span>
    </button>
  </div>
</div>
}

<script define:vars={{ showViewToggler }}>
  function handleViewToggle(e) {
    const button = e.currentTarget;
    if (!(button instanceof HTMLElement)) return;
    
    const view = button.dataset.view;
    if (!view) return;
  
    localStorage.setItem('categoryView', view);
    updateUI(view);
  }
  
  function updateUI(view) {
    document.querySelectorAll('.view-toggle')
      .forEach(btn => btn.classList.toggle('bg-neutral-lightest', 
        btn.dataset.view === view));
  
    const productsContainer = document.querySelector('.products-container');
    if (productsContainer) {
      productsContainer.classList.remove('view-grid', 'view-list');
      productsContainer.classList.add(`view-${view}`);
    }
  }
  
  document.addEventListener('astro:page-load', () => {
    if (!showViewToggler) return;
    
    updateUI(localStorage.getItem('categoryView') || 'list');
    document.querySelectorAll('.view-toggle')
      .forEach(btn => btn.addEventListener('click', handleViewToggle));
  }, { once: true });
  </script>