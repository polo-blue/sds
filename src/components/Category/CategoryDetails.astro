---
import CategorySidebarToggler from './CategorySidebarToggler.vue';
import CategoryViewToggler from './CategoryViewToggler.astro';
import { Icon } from 'astro-icon/components';
import { t } from "i18next";

const { category, subcategory, subtitle, subsubtitle, titleSmall, locale, showViewToggler, viewerLabels } = Astro.props;

// Compute base URL for localization
const baseURL = locale === 'en' ? '' : `/${locale}`;
   
---

<div 
  class="flex flex-nowrap items-center pr-3 sm:pb-3 sm:pt-4 md:pl-4 relative z-10-off bg-neutral-lightest md:bg-white"
  transition:name="category-details"
  transition:animate="fade"
>
<CategorySidebarToggler onclick="toggleSidebar()">
  <!-- Desktop expanded - initially visible -->
  <Icon 
    name="ant-design:menu-fold-outlined" 
    class="toggler-btn md:[&:not(.hidden)]:block" 
    aria-hidden="true"
  />
  <!-- Desktop collapsed - initially hidden -->
  <Icon 
    name="ant-design:menu-unfold-outlined" 
    class="toggler-btn hidden md:[&:not(.hidden)]:block" 
    aria-hidden="true"
  />
  <!-- Mobile icon -->
  <Icon 
    name="ant-design:menu-outlined" 
    class="toggler-btn block md:hidden" 
    aria-hidden="true"
  />
</CategorySidebarToggler>

  <div class="overflow-x-auto overflow-y-hidden flex max-w-full items-center">
    {subtitle ? (
      <>
        <a class="text-lg font-vw-headregular whitespace-nowrap block" href={`${baseURL}/${category.slug}/`}>
          {category.name}
          {titleSmall && <small>{titleSmall}</small>}
        </a>
        <span class="text-neutral-lighter text-lg inline-block px-1 font-headlight">/</span>
        {!subsubtitle ? (
          <h1 class="text-lg py-2.5 sm:py-0 whitespace-nowrap underline underline-offset-6 decoration-blue-300 decoration-0.5">
            {subtitle} <span class="sr-only"> {t('catalog.extra-short')}</span>
          </h1>
        ) : (
          <>
            <div class="text-lg py-2.5 sm:py-0 whitespace-nowrap ">
              <a href={`${baseURL}/${category.slug}/${subcategory.slug}/`}>
                {subtitle}
              </a>
            </div>
            <span class="text-neutral-lighter text-lg inline-block px-1 font-headlight">/</span>
            <h1 class="text-lg py-2.5 sm:py-0 whitespace-nowrap underline underline-offset-6 decoration-blue-300 decoration-0.5">
              {subsubtitle} <span class="sr-only"> {t('catalog.extra-short')}</span>
            </h1>
          </>
        )}
      </>
    ) : (
      <h1 class="text-lg py-2.5 sm:py-0 whitespace-nowrap">
        {category.name}
        {titleSmall && (<small>{titleSmall}</small>)}
        <span class="sr-only"> {t('catalog.extra-short')}</span>
      </h1>
    )}
  </div>

{ showViewToggler && (  <CategoryViewToggler {...viewerLabels}  class="hidden lg:flex items-center gap-2 ml-auto" /> ) }

</div>

<script is:inline>
  function initializeSidebar() {
    const sidebar = document.getElementById('sidebar');
    const savedState = localStorage.getItem('sidebarState') || 'open';
    
    if (sidebar) {
      sidebar.classList.toggle('collapsed', savedState === 'closed');
      
      const togglers = document.querySelectorAll('.toggler-btn');
      if (togglers.length >= 2) {
        const isCollapsed = savedState === 'closed';
        togglers[0].classList.toggle('hidden', isCollapsed);
        togglers[1].classList.toggle('hidden', !isCollapsed);
      }
    }
  }
  
  function toggleSidebar() {
    const sidebar = document.getElementById('sidebar');
    const togglers = document.querySelectorAll('.toggler-btn');
    const isMobile = window.matchMedia("(max-width: 768px)").matches;
  
    if (sidebar) {
      if (isMobile) {
        const isShown = sidebar.classList.toggle('show');
        document.body.classList.toggle('overflow-hidden', isShown);
      } else {
        const isCollapsed = sidebar.classList.toggle('collapsed');
        document.body.classList.remove('overflow-hidden');
        localStorage.setItem('sidebarState', isCollapsed ? 'closed' : 'open');
        
        if (togglers.length >= 2) {
          togglers[0].classList.toggle('hidden', isCollapsed);
          togglers[1].classList.toggle('hidden', !isCollapsed);
        }
      }
    }
  }
  
  document.addEventListener('DOMContentLoaded', initializeSidebar);
  document.addEventListener('astro:page-load', initializeSidebar, { once: true });
  </script>

  <style>
    .toggler-btn {
      @apply md:-mt-0.5;
    }
  </style>