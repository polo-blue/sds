<!-- ---
const { productId, bigTile, locale, index } = Astro.props;

import { getProductUrl, getCategoryInfo, getProductById, getImageUrl, getProductTranslation } from '@utils/db'
import i18next, { t } from "i18next";
import { getTranslation } from '@utils/text';
// import { imagesDir, imagesMediumDir, imagesSmallDir } from '~/spoko/logic/settings'
import ProductImage from "@components/ProductImage.astro"
import ProductNumber from "@components/Product/ProductNumber.astro"


const product =  await getProductById(productId)
const thumb = await getImageUrl(`${product.photo}`) // await getImageUrl(`w450/${product.photo}`)

const productTranslation = i18next.exists(`parts.${product.number}.name`) ? null : await getProductTranslation(productId, locale);

const productName = productTranslation ? productTranslation.name : t(`parts.${product.number}.name`)

---

  { product && 
   (
    <div class='product-thumb--plp product-thumb--carousel' >
          { product.photo !== null && thumb ?
            <ProductImage
              imageObject={
                {
                  src: thumb,
                  alt: productName,
                  height: '180',
                  width: '240',
                }
              }
            />
            :
            <img src="/1x1.png" class="bg-gray-100/70" alt={productName.toString()} />
          }
        </div>
      
        <div class="sm:pl-4 flex flex-col" >
          <a class="font-light leading-none mb-2 pr-4 line-clamp-2 h-[2em] before:(content-empty absolute left-0 right-4 h-full top-0)"
            href={getProductUrl(product.number, locale)} itemprop="url"
            title={product.number}
          >
            { productName }
          </a>

          <ProductNumber productNumber={product.number} copyDisabled={true}  />
          
          { index !== null && 
            ( <meta itemprop="position" content={index} />
            <meta itemprop="name" content={String(productName)} /> )
          }
      </div>

    )}
 -->
