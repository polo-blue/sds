---
import { t } from "i18next";
import ButtonCopy from "./ButtonCopy.vue";
import PartNumber from "./PartNumber.vue";

const {
  copyDisabled,
  productNumber,
  as,
  isPdp,
  small,
  big,
  class: className,
} = Astro.props;

const butonTexts = {
  copy: t("copy"),
  copied: t("copied"),
};

const isLetter = (string: string) => {
  return string.toLowerCase() !== string.toUpperCase();
};

const niceName = (string: string, separator = "\u00A0") => {
  let word = string; //e.g. to 6Q0947106EY20 .split('+')

  if (
    isLetter(string[0]) === true &&
    isLetter(string[1]) === false &&
    string.length === 9
  ) {
    // mainly liquids
    word = string
      .replace(
        /^(\w{1})(\w{3})(\w{3})(.*)$/,
        `$1${separator}$2${separator}$3${separator}$4`,
      )
      .replace(/(^\s+|\s+$)/, "");
  }

  // wheels / emblems e.g. 6R0601025AK8Z8 --> 6R0 601 025 AB 8Z8 || 6C0601025DFZZ --> 6C0 601 025 D FZZ || 6R0853433ADA1 -> 6R0 853 433 A DA1
  else if (string.length >= 13) {
    // console.log('part number: wheels / emblems', word)
    word = string
      .replace(
        /^(\w{3})(\w{3})(\w{3})(.*)(\w{3})$/,
        `$1${separator}$2${separator}$3${separator}$4${separator}$5`,
      )
      .replace(/(^\s+|\s+$)/, "");
  } else if (string.length > 12) {
    // accessories / mats
    word = string
      .replace(
        /^(\w{3})(\w{3})(\w{3})(\w{1})(.*)$/,
        `$1${separator}$2${separator}$3${separator}$4${separator}$5`,
      )
      .replace(/(^\s+|\s+$)/, "");
  } else {
    // other parts
    word = string
      .replace(/(\w{3})/g, `$1${separator}`)
      .replace(/(^\s+|\s+$)/, "");
  }

  // remove single separator from the end of string:
  let lastCharacter = word.split('').pop() || '';
  
  if (!Boolean(lastCharacter.match(/[a-zA-Z0-9]/))) {
    word = word.slice(0, -1)
  }

  return word.replace(" ", separator);
};

const classes = `product-number ${big ? "text-5.5 leading-none" : "text-sm"} ${className}` //mt-2 sm:mt-0


---

<!-- <PartNumber number={productNumber} as="div"></PartNumber> -->


{
  productNumber !== null && (
   

      <PartNumber class={`${classes} product-code`} number={productNumber} as={isPdp ? 'h2' : 'div'} />

      <div
        class={`code-formatted ${small ? "tracking-wide" : "tracking-tight"}`}
      >
        <div class="relative inset-0" data-pagefind-ignore>
          {niceName(productNumber, ".")}
        </div>
        <div class="absolute inset-0" data-pagefind-ignore>
          {niceName(productNumber, "-")}
        </div>
        <PartNumber class="number-secondary" number={niceName(productNumber)} as={isPdp ? 'h3' : 'div'} />
      </div>
    
  )
}


<!-- {!copyDisabled && ( -->
  <ButtonCopy
    class="top-1 right-0"
    productNumber={String(productNumber)}
    texts={butonTexts}
    tooltipClasses=""
    client:only
  />
<!-- )}  -->
